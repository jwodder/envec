- Convert everything to Python
- Everything is broken because checklists are now paginated.  Deal with this.
- Test if checklist.py currently works
- Try converting checklist.py to SAX
 - Since the xml.sax modules don't support HTML entities like &copy;, and it's
   likely xml.dom.minidom doesn't support them either, I might have to switch
   to HTMLParser
  - Use `lxml.html` <https://pypi.python.org/pypi/lxml/> instead?
  - Use BeautifulSoup instead?
- When fetching card details, ensure that numeric (i.e., '*'-less) P/Ts and
  loyalties are converted to numbers rather than left as strings
- After tutor.py fetches a printing, the set is converted to a CardSet object.
  Should it be converted back to a string when JSONifying?

- Robustness:
 - Handle XML parse errors
 - tutor.py should retry failed `get's under certain circumstances
 - Make listify.pl's references to external images for \img work for other
   people
 - Improve details.py's attempt to adapt to Gatherer's constant changes of the
   "ctlXX" substring in the IDs on multipart card pages

- Features:
 - Implement the rest of the features for tutor.py (See the top of its source)
 - Add special handling/storage for leveler cards
 - Add a means to read Card objects from a JSON/XML file one at a time rather
   than all at once
  - Possible libraries for incremental/streaming JSON parsing:
   - https://pypi.python.org/pypi/ijson/
   - https://pypi.python.org/pypi/jsonstream/
 - Give Card a fromXML method?
 - Card.showField1 should treat a negative width as disabling line-wrapping
 - Fix/improve the PostScript output of listify.pl
 - Give Content a "devotion" method
 - Add checkboxes to the output of listify.pl (but only if a flag is given?)
 - Give the classes `toDict`/`_asdict` methods
 - Give Card an isSilver/isUncard method?

- Coding:
 - Data structures:
  - Make the storage of Content.text fields mirror their representation in
    mtgcard.dtd
  - Instead of Multivals, make Printing objects store lists of
    "ComponentPrinting" (or something) objects, with special handling for
    multiverseids
  - Instead of Card objects having a list of Content objects, instead make them
    have a "primary" Content attribute and a conditional "secondary" Content
    attribute?
  - Make Multival store tuples instead of lists?
  - Replace Multivals with lists of `{"subcard": INT, "value": INT | STR}`
    objects?
  - Rename "pow" and "tough" to "power" and "toughness"
 - Ensure that the printings fields of Card objects are always sorted?
 - Ensure that the multiverseid fields (et alii?) of Printing objects are
   always sorted?
 - Make the default datafile paths absolute rather than relative (possibly with
   a way to set the datafile directory at runtime?)
 - Should subcard numbering in XML output (and internal rulings representation,
   et alii?) start from 1 for the first part rather than 0?
 - Rethink the Multival.get method
 - Give all classes "copy constructors"
 - Eliminate Content.isNontraditional?
 - Eliminate Card.newCard?
 - Should "oversized" or "nontraditional" be a card class?
 - Move the use of &rmitalics from tutor.py to details.py?
 - Move the code for fetching & merging together all of a card's printings from
   tutor.* into the library proper
 - Support both Python 2 and Python 3
 - Add a JSONDecoder subclass

- Data & documentation:
 - Add documentation
 - Rewrite spoilers/* so that it makes sense to other people
 - For the multiversion cards in rarities.tsv, give each entry a field for the
   multiverseid and another field for a short description (to become the
   'notes' field) that a mortal can use to identify the version
 - Add files to data/ for:
  - Promo cards not in Gatherer
  - The release dates of the various promo cards
  - The release dates of the different Vanguard card sets
  - The Anthologies, Deckmasters, & Duels of the Planeswalkers (et alii?) sets
    and any other sets not in Gatherer
  - Multiversion cards not in rarities.tsv (e.g., alternate-art foils from
    Planeshift, Brothers Yamazaki, ???)
 - Add the rest of the Twitter hashtags to sets.json

- For later:
 - Make use of all of the unused data/ files
 - Implement Card->showField1('printings')
 - Better handling of Uncards, specifically:
  - B.F.M.
  - Who/What/When/Where/Why
  - Curse of the Fire Penguin
  - Little Girl's CMC
  - Should fractional P/T's be stored as floats rather than as ints with 'Â½'
    appended?
  - How should mtgcard.dtd handle fractional mana symbols?
  - Give all Uncards an attribute marking them as such?
 - Support fetching & storing format legality information
  - Note that Gatherer has been known to be out of date regarding Commander
    format legality
 - Add a function for parsing an individual card page for printed (rather than
   Oracle) text
 - Add elements to mtgcard.dtd for storing printed text, expansion symbols,
   card language, etc.
 - Add a wrapper around parseDetails that downloads and parses a given
   multiverseid?
 - Make the bulk of tutor.py into a library function?
 - Overload stringification of Multival objects?
 - Add fields to sets.json for:
  - whether a set is online-only?
  - number of cards?
  - maximum collector's number? (only worth noting for Unhinged and M15)
  - printed abbreviation (M15+)
  - "promotional" (boolean)
  - "codename" (used during development; see <http://archive.wizards.com/Magic/magazine/article.aspx?x=mtgcom/daily/mr33>, among other sources)
  - whether the set had foil/premium cards, no foil cards, or only foil cards
  - dates of prereleases etc.?
 - Store card data in actual SQL databases rather than flat JSON/XML files

Reminder about function naming conventions:
 - Functions for parsing the contents of a string should have their names
   prefixed with "parse"
 - Functions for parsing the contents of a file identified by file name should
   have their names prefixed with "load"
